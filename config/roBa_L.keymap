#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 4
#define SCROLL 5
#define NUM 3

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <10 11>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <0 1>;
        };

        cavve {
            bindings = <&cavve>;
            key-positions = <22 23>;
        };

        cz {
            bindings = <&kp LC(Z)>;
            key-positions = <23 24>;
        };

        cy {
            bindings = <&kp LC(Y)>;
            key-positions = <36 35>;
        };

        win_arrow {
            bindings = <&kp LEFT_WIN>;
            key-positions = <2 1>;
            layers = <3>;
        };

        gyoutyousei {
            bindings = <&gyoutyousei>;
            key-positions = <25 24>;
        };

        gyousyoukyo {
            bindings = <&gyousyoukyo>;
            key-positions = <3 2>;
        };

        altvector {
            bindings = <&kp LA(DOWN_ARROW)>;
            key-positions = <13 12>;
        };

        saikou_saikou {
            bindings = <&kp LG(RIGHT_ARROW)>;
            key-positions = <7 8>;
        };

        f2 {
            bindings = <&kp F2>;
            key-positions = <19 20>;
        };

        screensnap {
            bindings = <&kp LS(LC(S))>;
            key-positions = <32 31>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        to_layer_2: to_layer_2 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 2 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_2";
        };

        cavve: cavve {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(V)) &kp V &kp ENTER>;
            label = "CAVVE";
        };

        gyoutyousei: gyoutyousei {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp LEFT_ALT &kp H &kp O &kp I>;
            label = "GYOUTYOUSEI";
        };

        gyousyoukyo: gyousyoukyo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp D &kp R>;
            label = "GYOUSYOUKYO";
        };

        brackets: brackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACKET>;
            label = "BRACKETS";
        };

        curlybrackets: curlybrackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACE>;
            label = "CURLYBRACKETS";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        lt_to_layer_2: lt_to_layer_2 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_2";
            bindings = <&mo>, <&to_layer_2>;

            #binding-cells = <2>;
            tapping-term-ms = <0>;
        };

        scroll_up_down: scroll_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
            label = "scroll_up_down";
        };

        scroll_right_left: scroll_right_left {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
            label = "scroll_right_left";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W                      &kp E                      &kp R                        &kp T                                                              &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S                      &kp D                      &kp F                        &kp G            &kp ENTER                          &kp LG(D)      &kp H        &kp J  &kp K      &kp L    &lt 5 MINUS
&mt LEFT_SHIFT Z  &kp X                      &kp C                      &kp V                        &lt 6 B          &kp LC(W)                          &kp LA(F4)     &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp APOSTROPHE    &mt LEFT_WIN LS(NUMBER_8)  &mt LEFT_ALT LS(NUMBER_9)  &lt_to_layer_0 3 INT_HENKAN  &mt LCTRL SPACE  &lt_to_layer_0 1 INT_MUHENKAN      &kp BACKSPACE  &lt 3 ENTER                             &kp LS(MINUS)
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans      &kp DEL  &trans                          &kp F12
            >;

            sensor-bindings = <&inc_dec_kp LC(PG_UP) LC(PG_DN)>;
        };

        sub1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        num {
            bindings = <
&kp LS(NUMBER_1)      &kp LS(NUMBER_2)       &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(N5)                                       &kp KP_DIVIDE    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_SUBTRACT
&kp LS(NUMBER_6)      &kp LS(NUMBER_7)       &kp EQUAL         &kp LS(EQUAL)     &kp LEFT_BRACKET         &trans      &trans      &kp KP_MULTIPLY  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS
&kp LS(LEFT_BRACKET)  &kp LS(RIGHT_BRACKET)  &kp F24           &trans            &kp LS(INTERNATIONAL_1)  &trans      &trans      &trans           &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans
&kp SEMICOLON         &kp RIGHT_BRACKET      &kp F23           &trans            &trans                   &trans      &kp KP_DOT  &kp KP_NUMBER_0                                                     &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(LA(TAB)) LC(LA(LS(TAB)))>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &mkp MB4
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        BT {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
